{"remainingRequest":"E:\\lottery_mobile_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\lottery_mobile_vue\\src\\views\\login\\login.html?vue&type=template&id=a49090ce&","dependencies":[{"path":"E:\\lottery_mobile_vue\\src\\views\\login\\login.html","mtime":1561435182000},{"path":"E:\\lottery_mobile_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\lottery_mobile_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content login\" }, [\n    _c(\"div\", { staticClass: \"service-wrap\" }, [\n      _c(\"div\", { staticClass: \"service-info\" }, [\n        _c(\"img\", {\n          attrs: { src: require(\"@/assets/img/icon_login_user@2x.png\") }\n        }),\n        _c(\"div\", [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model.trim\",\n                value: _vm.input.loginID,\n                expression: \"input.loginID\",\n                modifiers: { trim: true }\n              }\n            ],\n            attrs: { type: \"text\", placeholder: \"用户名称\" },\n            domProps: { value: _vm.input.loginID },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.input, \"loginID\", $event.target.value.trim())\n              },\n              blur: function($event) {\n                return _vm.$forceUpdate()\n              }\n            }\n          })\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"service-info\" }, [\n        _c(\"img\", {\n          attrs: { src: require(\"@/assets/img/icon_login_passeord@2x.png\") }\n        }),\n        _c(\"div\", [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model.trim\",\n                value: _vm.input.loginPw,\n                expression: \"input.loginPw\",\n                modifiers: { trim: true }\n              }\n            ],\n            attrs: { type: \"password\", placeholder: \"会员密码\" },\n            domProps: { value: _vm.input.loginPw },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.input, \"loginPw\", $event.target.value.trim())\n              },\n              blur: function($event) {\n                return _vm.$forceUpdate()\n              }\n            }\n          })\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"service-info\" }, [\n        _c(\"img\", {\n          attrs: { src: require(\"@/assets/img/icon_login_code@2x.png\") }\n        }),\n        _c(\"div\", [\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model.trim\",\n                value: _vm.input.loginCode,\n                expression: \"input.loginCode\",\n                modifiers: { trim: true }\n              }\n            ],\n            attrs: { id: \"txt_vCode\", type: \"text\", placeholder: \"验证码\" },\n            domProps: { value: _vm.input.loginCode },\n            on: {\n              keydown: function($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                return _vm.login($event)\n              },\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.$set(_vm.input, \"loginCode\", $event.target.value.trim())\n              },\n              blur: function($event) {\n                return _vm.$forceUpdate()\n              }\n            }\n          })\n        ]),\n        _c(\n          \"span\",\n          { staticClass: \"verification\", on: { click: _vm.createCode } },\n          [_vm._v(_vm._s(_vm.vcode))]\n        )\n      ]),\n      _c(\"div\", { staticClass: \"service-block\" }),\n      _c(\"button\", { staticClass: \"login-button\", on: { click: _vm.login } }, [\n        _vm._v(\"登录\")\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}