{"remainingRequest":"E:\\lottery_mobile_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\lottery_mobile_vue\\src\\pages\\credit\\bjkl8\\bjkl8.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\lottery_mobile_vue\\src\\pages\\credit\\bjkl8\\bjkl8.vue","mtime":1558951236000},{"path":"E:\\lottery_mobile_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\lottery_mobile_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\lottery_mobile_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\lottery_mobile_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport HistoricalboardComponent from \"@/components/games/historicalboard/Historicalboard.vue\";\r\nimport BettingFieldComponent from \"@/components/games/bettingFiled/BetttingField.vue\";\r\nimport { _getbettime, _payRate } from \"@/assets/src/forgame.js\";\r\n// 汇入选择游戏组件\r\nimport GameChoiceComponent from \"@/components/games/gameChoice/GameChoice.vue\";\r\n\r\n\r\nimport {\r\n    calPayRate,\r\n    calPayRate2,\r\n    combination,\r\n    uniquearr,\r\n    randomRangeId,\r\n    gamestatus,\r\n    cleartimer,\r\n} from \"@/assets/src/forgame\";\r\n\r\nlet arr27=[]\r\nfor(let i=0;i<28;i++){\r\n    arr27.push({\r\n        id:'Specific-N'+i.toString(),\r\n        play:i,\r\n        checked:false\r\n    })\r\n}\r\nexport default {\r\n    name: \"bjkl8\",\r\n    components: {\r\n        HistoricalboardComponent,\r\n        BettingFieldComponent,\r\n        GameChoiceComponent,\r\n    },\r\n    data() {\r\n        return {\r\n            gameMenu: [{\r\n                sub: [{\r\n                    subName: \"混合\",\r\n                    shortName: \"mix\",\r\n                    classification: [{\r\n                        classificationArr: [{ id: \"Mix-B\", play: \"大\", },\r\n                            { id: \"Mix-S\", play: \"小\", },\r\n                            { id: \"Mix-O\", play: \"单\", },\r\n                            { id: \"Mix-E\", play: \"双\", },\r\n                            { id: \"Mix-BO\", play: \"大单\", },\r\n                            { id: \"Mix-SO\", play: \"小单\", },\r\n                            { id: \"Mix-BE\", play: \"大双\", },\r\n                            { id: \"Mix-SE\", play: \"小双\", },\r\n                            { id: \"Mix-BB\", play: \"极大\", },\r\n                            { id: \"Mix-SS\", play: \"极小\", }\r\n                        ],\r\n                    }]\r\n                }],\r\n            },\r\n            {\r\n                sub: [{\r\n                    subName: \"单码\",\r\n                    shortName: \"Specific\",\r\n                    classification: [{\r\n                        classificationArr: arr27\r\n                    }]\r\n                }],\r\n            }],\r\n\r\n            offTitle: 0,\r\n            OffSubTitle: 0,\r\n            option_slide_idx: null,\r\n            payrate: { value: {} },\r\n            time: { value: \"\" },\r\n            barMax: 0, //--->子组件\r\n            rebatRate: 0, //与子组件双向绑定\r\n            forbet: [], //投注暂存\r\n            quantity: 0,\r\n            currentName: \"\", //购物车玩法显示\r\n            issueTrace: true, //是否可追号\r\n            shortName: [],\r\n            mask: true\r\n        };\r\n    },\r\n    mounted() {\r\n        window.scrollTo(0, 0);\r\n        let t = this;\r\n        let gameCode = this.$route.params.id;\r\n        this.setCookie('currentGameName', encodeURI(this.$route.meta.title), 0.5) //safari 不支持存中文 要编码 \r\n\r\n        gamestatus(this, gameCode, function(res) {\r\n            if (Object.keys(res).length === 0) {\r\n                alert(\"维护中\");\r\n                t.$router.push({ path: \"/index\" });\r\n                return;\r\n            } //更新vuex 状态\r\n            t.$store.dispatch(\"updatebetGameCode\", gameCode);\r\n            _getbettime(t, gameCode, t.time); //盘口资料\r\n            _payRate(t, gameCode, \"2\", t.payrate); //赔率\r\n\r\n        });\r\n    },\r\n    methods: {\r\n        //   监听事件 : 监听玩法选择有无变动，若有则执行FN\r\n        clickOff: function(clickOffValue, clickSubValue) {\r\n            this.offTitle = clickOffValue;\r\n            this.OffSubTitle = clickSubValue;\r\n            this.currentName = this.gameMenu[clickOffValue].sub[clickSubValue].subName;\r\n        },\r\n\r\n        //监听如果开启选择玩法页面 就取消所有游戏选取\r\n        childByValue: function() {\r\n            this.gameMenu[this.offTitle].sub[this.OffSubTitle].classification.forEach(function(e) {\r\n                e.option_slide_idx = null\r\n                e.classificationArr.forEach(function(i) {\r\n                    i.checked = false\r\n                })\r\n            })\r\n\r\n            this.option_slide_idx = null;\r\n            this.quantity = 0;\r\n            this.forbet = []; //暂存清空\r\n            this.rebatRate = 0;\r\n        },\r\n        bundledatainit() {\r\n            //资料初始\r\n            let _t = this;\r\n            if (Object.keys(this.payrate.value).length > 0) {\r\n                this.gameMenu.forEach(function(v) {\r\n                    v.sub[0].classification.forEach(function(q) {\r\n                        q.classificationArr.forEach(function(e) {\r\n                            _t.renderdata(e);\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n            this.mask = false\r\n        },\r\n        renderdata(obj) {\r\n            //玩法阵列资料绑定\r\n            let _t = this;\r\n\r\n            let _p = _t.payrate.value[obj.id];\r\n            obj.odds = calPayRate(_p, 0);\r\n            obj.odds2 = calPayRate2(_p, 0);\r\n            obj.playTypeS = _p.playTypeS;\r\n            obj.playTypeM = _p.playTypeM;\r\n            _t.barMax = _p.rebatRate;\r\n\r\n        },\r\n        barrenderdata(obj) {\r\n            //拉动bar 玩法赔率变动           \r\n            let _p = this.payrate.value[obj.id];\r\n            obj.odds = calPayRate(_p, this.rebatRate);\r\n            obj.odds2 = calPayRate2(_p, this.rebatRate);\r\n\r\n        },\r\n        //选取的号码\r\n        checkNum(Arr) {\r\n            let _t = this;           \r\n            this.forbet = [];\r\n\r\n            let checkedArr = Arr.filter(function(v, i) {\r\n                return v.checked == true\r\n            })\r\n            checkedArr.forEach(function(e) {\r\n                let positions = [''];\r\n                \r\n                _t.forbet.push({\r\n                    uid: randomRangeId(10),\r\n                    id: e.id,\r\n                    play: e.play,\r\n                    name: _t.currentName,\r\n                    betMainInfo: {\r\n                        playTypeM: e.playTypeM,\r\n                        playTypeS: e.playTypeS,\r\n                        positions: positions,\r\n                        quantity: 1,\r\n                        payRate: e.odds,\r\n                        payRate2: e.odds2,\r\n                        rebatRate: _t.rebatRate,\r\n                        unitPrice: 0\r\n                    }\r\n                });\r\n\r\n            })\r\n\r\n            let Plus = 0;\r\n            this.forbet.forEach(function(v, i) {\r\n                Plus += v.betMainInfo.quantity;\r\n            });\r\n\r\n            this.quantity = Plus;\r\n        }\r\n    },\r\n    watch: {\r\n        payrate: {\r\n            deep: true,\r\n            handler(nv, ov) {\r\n                this.bundledatainit();\r\n            }\r\n        },\r\n\r\n        rebatRate(nv, ov) {\r\n            let _t = this;\r\n            this.rebatRate = nv;\r\n\r\n            //画面、阵列更新\r\n            this.gameMenu[this.offTitle].sub[0].classification.forEach(function(v) {\r\n                v.classificationArr.forEach(function(e) {\r\n                    _t.barrenderdata(e);\r\n                })\r\n            })\r\n\r\n            //已选的下注 更新资料\r\n            if (this.forbet.length > 0) {\r\n                this.forbet.forEach(function(v, i) {\r\n                    let _p = _t.payrate.value[v.id];\r\n                    v.betMainInfo.payRate = calPayRate(_p, nv);\r\n                    v.betMainInfo.payRate2 = calPayRate2(_p, nv);\r\n                    v.betMainInfo.rebatRate = nv;\r\n                });\r\n            }\r\n        }\r\n    },\r\n    destroyed() {\r\n        const unWatch = this.$watch(\"payrate\");\r\n        unWatch(); // 手动注销watch\r\n        this.childByValue();\r\n        cleartimer()\r\n    },\r\n    computed: {\r\n        donotTouch() {\r\n            return this.$store.state.dontTouch;\r\n        }\r\n    }\r\n};\r\n",{"version":3,"sources":["bjkl8.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bjkl8.vue","sourceRoot":"src/pages/credit/bjkl8","sourcesContent":["<template src=\"./bjkl8.html\">\r\n    \r\n</template>\r\n\r\n<script>\r\nimport HistoricalboardComponent from \"@/components/games/historicalboard/Historicalboard.vue\";\r\nimport BettingFieldComponent from \"@/components/games/bettingFiled/BetttingField.vue\";\r\nimport { _getbettime, _payRate } from \"@/assets/src/forgame.js\";\r\n// 汇入选择游戏组件\r\nimport GameChoiceComponent from \"@/components/games/gameChoice/GameChoice.vue\";\r\n\r\n\r\nimport {\r\n    calPayRate,\r\n    calPayRate2,\r\n    combination,\r\n    uniquearr,\r\n    randomRangeId,\r\n    gamestatus,\r\n    cleartimer,\r\n} from \"@/assets/src/forgame\";\r\n\r\nlet arr27=[]\r\nfor(let i=0;i<28;i++){\r\n    arr27.push({\r\n        id:'Specific-N'+i.toString(),\r\n        play:i,\r\n        checked:false\r\n    })\r\n}\r\nexport default {\r\n    name: \"bjkl8\",\r\n    components: {\r\n        HistoricalboardComponent,\r\n        BettingFieldComponent,\r\n        GameChoiceComponent,\r\n    },\r\n    data() {\r\n        return {\r\n            gameMenu: [{\r\n                sub: [{\r\n                    subName: \"混合\",\r\n                    shortName: \"mix\",\r\n                    classification: [{\r\n                        classificationArr: [{ id: \"Mix-B\", play: \"大\", },\r\n                            { id: \"Mix-S\", play: \"小\", },\r\n                            { id: \"Mix-O\", play: \"单\", },\r\n                            { id: \"Mix-E\", play: \"双\", },\r\n                            { id: \"Mix-BO\", play: \"大单\", },\r\n                            { id: \"Mix-SO\", play: \"小单\", },\r\n                            { id: \"Mix-BE\", play: \"大双\", },\r\n                            { id: \"Mix-SE\", play: \"小双\", },\r\n                            { id: \"Mix-BB\", play: \"极大\", },\r\n                            { id: \"Mix-SS\", play: \"极小\", }\r\n                        ],\r\n                    }]\r\n                }],\r\n            },\r\n            {\r\n                sub: [{\r\n                    subName: \"单码\",\r\n                    shortName: \"Specific\",\r\n                    classification: [{\r\n                        classificationArr: arr27\r\n                    }]\r\n                }],\r\n            }],\r\n\r\n            offTitle: 0,\r\n            OffSubTitle: 0,\r\n            option_slide_idx: null,\r\n            payrate: { value: {} },\r\n            time: { value: \"\" },\r\n            barMax: 0, //--->子组件\r\n            rebatRate: 0, //与子组件双向绑定\r\n            forbet: [], //投注暂存\r\n            quantity: 0,\r\n            currentName: \"\", //购物车玩法显示\r\n            issueTrace: true, //是否可追号\r\n            shortName: [],\r\n            mask: true\r\n        };\r\n    },\r\n    mounted() {\r\n        window.scrollTo(0, 0);\r\n        let t = this;\r\n        let gameCode = this.$route.params.id;\r\n        this.setCookie('currentGameName', encodeURI(this.$route.meta.title), 0.5) //safari 不支持存中文 要编码 \r\n\r\n        gamestatus(this, gameCode, function(res) {\r\n            if (Object.keys(res).length === 0) {\r\n                alert(\"维护中\");\r\n                t.$router.push({ path: \"/index\" });\r\n                return;\r\n            } //更新vuex 状态\r\n            t.$store.dispatch(\"updatebetGameCode\", gameCode);\r\n            _getbettime(t, gameCode, t.time); //盘口资料\r\n            _payRate(t, gameCode, \"2\", t.payrate); //赔率\r\n\r\n        });\r\n    },\r\n    methods: {\r\n        //   监听事件 : 监听玩法选择有无变动，若有则执行FN\r\n        clickOff: function(clickOffValue, clickSubValue) {\r\n            this.offTitle = clickOffValue;\r\n            this.OffSubTitle = clickSubValue;\r\n            this.currentName = this.gameMenu[clickOffValue].sub[clickSubValue].subName;\r\n        },\r\n\r\n        //监听如果开启选择玩法页面 就取消所有游戏选取\r\n        childByValue: function() {\r\n            this.gameMenu[this.offTitle].sub[this.OffSubTitle].classification.forEach(function(e) {\r\n                e.option_slide_idx = null\r\n                e.classificationArr.forEach(function(i) {\r\n                    i.checked = false\r\n                })\r\n            })\r\n\r\n            this.option_slide_idx = null;\r\n            this.quantity = 0;\r\n            this.forbet = []; //暂存清空\r\n            this.rebatRate = 0;\r\n        },\r\n        bundledatainit() {\r\n            //资料初始\r\n            let _t = this;\r\n            if (Object.keys(this.payrate.value).length > 0) {\r\n                this.gameMenu.forEach(function(v) {\r\n                    v.sub[0].classification.forEach(function(q) {\r\n                        q.classificationArr.forEach(function(e) {\r\n                            _t.renderdata(e);\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n            this.mask = false\r\n        },\r\n        renderdata(obj) {\r\n            //玩法阵列资料绑定\r\n            let _t = this;\r\n\r\n            let _p = _t.payrate.value[obj.id];\r\n            obj.odds = calPayRate(_p, 0);\r\n            obj.odds2 = calPayRate2(_p, 0);\r\n            obj.playTypeS = _p.playTypeS;\r\n            obj.playTypeM = _p.playTypeM;\r\n            _t.barMax = _p.rebatRate;\r\n\r\n        },\r\n        barrenderdata(obj) {\r\n            //拉动bar 玩法赔率变动           \r\n            let _p = this.payrate.value[obj.id];\r\n            obj.odds = calPayRate(_p, this.rebatRate);\r\n            obj.odds2 = calPayRate2(_p, this.rebatRate);\r\n\r\n        },\r\n        //选取的号码\r\n        checkNum(Arr) {\r\n            let _t = this;           \r\n            this.forbet = [];\r\n\r\n            let checkedArr = Arr.filter(function(v, i) {\r\n                return v.checked == true\r\n            })\r\n            checkedArr.forEach(function(e) {\r\n                let positions = [''];\r\n                \r\n                _t.forbet.push({\r\n                    uid: randomRangeId(10),\r\n                    id: e.id,\r\n                    play: e.play,\r\n                    name: _t.currentName,\r\n                    betMainInfo: {\r\n                        playTypeM: e.playTypeM,\r\n                        playTypeS: e.playTypeS,\r\n                        positions: positions,\r\n                        quantity: 1,\r\n                        payRate: e.odds,\r\n                        payRate2: e.odds2,\r\n                        rebatRate: _t.rebatRate,\r\n                        unitPrice: 0\r\n                    }\r\n                });\r\n\r\n            })\r\n\r\n            let Plus = 0;\r\n            this.forbet.forEach(function(v, i) {\r\n                Plus += v.betMainInfo.quantity;\r\n            });\r\n\r\n            this.quantity = Plus;\r\n        }\r\n    },\r\n    watch: {\r\n        payrate: {\r\n            deep: true,\r\n            handler(nv, ov) {\r\n                this.bundledatainit();\r\n            }\r\n        },\r\n\r\n        rebatRate(nv, ov) {\r\n            let _t = this;\r\n            this.rebatRate = nv;\r\n\r\n            //画面、阵列更新\r\n            this.gameMenu[this.offTitle].sub[0].classification.forEach(function(v) {\r\n                v.classificationArr.forEach(function(e) {\r\n                    _t.barrenderdata(e);\r\n                })\r\n            })\r\n\r\n            //已选的下注 更新资料\r\n            if (this.forbet.length > 0) {\r\n                this.forbet.forEach(function(v, i) {\r\n                    let _p = _t.payrate.value[v.id];\r\n                    v.betMainInfo.payRate = calPayRate(_p, nv);\r\n                    v.betMainInfo.payRate2 = calPayRate2(_p, nv);\r\n                    v.betMainInfo.rebatRate = nv;\r\n                });\r\n            }\r\n        }\r\n    },\r\n    destroyed() {\r\n        const unWatch = this.$watch(\"payrate\");\r\n        unWatch(); // 手动注销watch\r\n        this.childByValue();\r\n        cleartimer()\r\n    },\r\n    computed: {\r\n        donotTouch() {\r\n            return this.$store.state.dontTouch;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style src=\"../k3/k3.css\" scoped>\r\n\r\n</style>\r\n"]}]}