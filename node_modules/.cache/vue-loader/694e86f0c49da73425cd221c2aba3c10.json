{"remainingRequest":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\westlottery\\lottery_mobile_vue\\src\\views\\user\\UserWalletTransfer.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\src\\views\\user\\UserWalletTransfer.vue","mtime":1567738730278},{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n  data() {\r\n    return {\r\n      siteID: this.$global.siteID,\r\n      mainbalance: null,\r\n      wallentList: [],\r\n      // wallentListBalance: [],\r\n      userinfo: null,\r\n      showtransfer: false,\r\n      accountTypeSelector: null,\r\n      //转入 转出\r\n      transferAmount: null,\r\n      picked: null,\r\n      outid: null,\r\n      inid: null,\r\n      outspName: null,\r\n      outpoints: null,\r\n      inspName: null,\r\n      inpoints: null,\r\n      //转账类型\r\n      transferTypeName: null,\r\n      transferType: null,\r\n      showType: false,\r\n      autoTransAmt: 0,\r\n      //金錢選擇\r\n      selectorMoney: [\r\n        { point: 100 },\r\n        { point: 500 },\r\n        { point: 1000 },\r\n        { point: 5000 },\r\n        { point: 9999 }\r\n      ]\r\n    };\r\n  },\r\n  mounted() {\r\n    let _this = this;\r\n    _this.getuserinfo();\r\n  },\r\n  methods: {\r\n    getWalletList() {\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      // _this.balance = _web.balance;\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"getwalletlist\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n\r\n          _this.wallentList = res.data.filter(function(i) {\r\n            let f = _this.userinfo.data.find(function(e) {\r\n              return i.spID == e.spid;\r\n            });\r\n            if (f != undefined) {\r\n              i.points = f.points;\r\n              if (i.spID == 0) {\r\n                _this.mainbalance = f.points;\r\n              }\r\n              if (i.spID == 43) {\r\n                i.src = require(\"@/assets/img/CQ92.png\");\r\n              }\r\n              if (i.spID == 54) {\r\n                i.src = require(\"@/assets/img/LEG.png\");\r\n              }\r\n            }\r\n            return !i.isOwn && i.spID != 0;\r\n          });\r\n        }\r\n      );\r\n    },\r\n    //取得会员资讯\r\n    getuserinfo() {\r\n      let _this = this;\r\n      _this.transferCancel();\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      // _this.balance = _web.balance;\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"getuserinfo\",\r\n        {\r\n          jsonString: {\r\n            siteID: this.siteID,\r\n            loginID: loginID\r\n          },\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          let info = res.info;\r\n          // _this.wallentListBalance = [];\r\n          _this.userinfo = res;\r\n          let autoTransType = info.autoTransType;\r\n\r\n          switch (autoTransType) {\r\n            case 1:\r\n              _this.accountTypeSelector = \"自订\";\r\n              break;\r\n            case 2:\r\n              _this.accountTypeSelector = \"免转钱包\";\r\n              break;\r\n            default:\r\n              _this.accountTypeSelector = \"智充宝\";\r\n              break;\r\n          }\r\n          // for (let i = 0; i < list.length; i++) {\r\n          //   if (list[i].spid != 0) {\r\n          //     _this.wallentListBalance.push(list[i]);\r\n          //   }\r\n          // }\r\n          _this.getWalletList();\r\n        }\r\n      );\r\n    },\r\n\r\n    transOut(v) {\r\n      if (v.spStatus == 2) return;\r\n      this.showtransfer = true;\r\n      this.outid = v.spID;\r\n      this.inid = 0;\r\n    },\r\n    transIn(v) {\r\n      if (v.spStatus == 2) return;\r\n      this.showtransfer = true;\r\n      this.outid = 0;\r\n      this.inid = v.spID;\r\n    },\r\n    transferCancel() {\r\n      this.showtransfer = false;\r\n      this.transferAmount = null;\r\n      this.outid = null;\r\n      this.inid = null;\r\n    },\r\n    //一键回收\r\n    alltransferOutWallet() {\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"alltransferOutWallet\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          if (res.error._error) {\r\n            // errorToast(res.error._error);\r\n          } else if (res.message) {\r\n            _this.getuserinfo();\r\n          }\r\n        }\r\n      );\r\n    },\r\n    //转入转出\r\n    transferWallet() {\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      // _this.balance = _web.balance;\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      if (this.outpoints < this.transferAmount || this.transferAmount < 1) {\r\n        alert(\"账户余额不足\");\r\n        return;\r\n      }\r\n      this.$axios(\r\n        \"TransferWallet\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          fromWalletID: this.outid,\r\n          toWalletID: this.inid,\r\n          amount: this.transferAmount,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          if (res.message) {\r\n            alert(res.message);\r\n            _this.getuserinfo();\r\n          }\r\n        }\r\n      );\r\n    },\r\n    //一鍵轉出\r\n    transferOutOneWallet(v) {\r\n      if (v.spStatus == 2) return;\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"TransferOutOneWallet\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          walletID: v.spID,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          if (res.error._error) {\r\n            alert(res.error._error);\r\n          } else if (res.message) {\r\n            alert(res.message);\r\n            _this.getuserinfo();\r\n          }\r\n        }\r\n      );\r\n    },\r\n    //一鍵轉入\r\n    allTransferInWallet(v) {\r\n      if (v.spStatus == 2) return;\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"AllTransferInWallet\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          walletID: v.spID,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          if (res.error._error) {\r\n            alert(res.error._error);\r\n          } else if (res.message) {\r\n            alert(res.message);\r\n            _this.getuserinfo();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  },\r\n  created() {\r\n    // 1. 呼叫 api action\r\n    this.$store.dispatch(\"actionAJAXexample\");\r\n  },\r\n  computed: mapGetters({\r\n    // 6. 等待通知.. 調用 getter function 取得 state\r\n    datalist: \"getDatalist\"\r\n  }),\r\n  watch: {\r\n    outid(nv, ov) {\r\n      if (nv == null) {\r\n        this.outspName = null;\r\n        this.outpoints = null;\r\n      } else if (nv == 0) {\r\n        this.outspName = \"主账户\";\r\n        this.outpoints = this.mainbalance;\r\n      } else {\r\n        let f = this.wallentList.find(e => {\r\n          return e.spID == nv;\r\n        });\r\n        this.outspName = f.spName;\r\n        this.outpoints = f.points;\r\n      }\r\n    },\r\n    inid(nv, ov) {\r\n      if (nv == null) {\r\n        this.inspName = null;\r\n        this.inpoints = null;\r\n      } else if (nv == 0) {\r\n        this.inspName = \"主账户\";\r\n        this.inpoints = this.mainbalance;\r\n      } else {\r\n        let f = this.wallentList.find(function(e) {\r\n          return e.spID == nv;\r\n        });\r\n        this.inspName = f.spName;\r\n        this.inpoints = f.points;\r\n      }\r\n    },\r\n    transferAmount(nv) {\r\n      if (nv > this.outpoints) {\r\n        this.transferAmount = this.outpoints;\r\n      }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["UserWalletTransfer.vue"],"names":[],"mappingsfile":"UserWalletTransfer.vue","sourceRoot":"src/views/user","sourcesContent":["<template src=\"./UserWalletTransfer.html\"></template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\nexport default {\r\n  data() {\r\n    return {\r\n      siteID: this.$global.siteID,\r\n      mainbalance: null,\r\n      wallentList: [],\r\n      // wallentListBalance: [],\r\n      userinfo: null,\r\n      showtransfer: false,\r\n      accountTypeSelector: null,\r\n      //转入 转出\r\n      transferAmount: null,\r\n      picked: null,\r\n      outid: null,\r\n      inid: null,\r\n      outspName: null,\r\n      outpoints: null,\r\n      inspName: null,\r\n      inpoints: null,\r\n      //转账类型\r\n      transferTypeName: null,\r\n      transferType: null,\r\n      showType: false,\r\n      autoTransAmt: 0,\r\n      //金錢選擇\r\n      selectorMoney: [\r\n        { point: 100 },\r\n        { point: 500 },\r\n        { point: 1000 },\r\n        { point: 5000 },\r\n        { point: 9999 }\r\n      ]\r\n    };\r\n  },\r\n  mounted() {\r\n    let _this = this;\r\n    _this.getuserinfo();\r\n  },\r\n  methods: {\r\n    getWalletList() {\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      // _this.balance = _web.balance;\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"getwalletlist\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n\r\n          _this.wallentList = res.data.filter(function(i) {\r\n            let f = _this.userinfo.data.find(function(e) {\r\n              return i.spID == e.spid;\r\n            });\r\n            if (f != undefined) {\r\n              i.points = f.points;\r\n              if (i.spID == 0) {\r\n                _this.mainbalance = f.points;\r\n              }\r\n              if (i.spID == 43) {\r\n                i.src = require(\"@/assets/img/CQ92.png\");\r\n              }\r\n              if (i.spID == 54) {\r\n                i.src = require(\"@/assets/img/LEG.png\");\r\n              }\r\n            }\r\n            return !i.isOwn && i.spID != 0;\r\n          });\r\n        }\r\n      );\r\n    },\r\n    //取得会员资讯\r\n    getuserinfo() {\r\n      let _this = this;\r\n      _this.transferCancel();\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      // _this.balance = _web.balance;\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"getuserinfo\",\r\n        {\r\n          jsonString: {\r\n            siteID: this.siteID,\r\n            loginID: loginID\r\n          },\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          let info = res.info;\r\n          // _this.wallentListBalance = [];\r\n          _this.userinfo = res;\r\n          let autoTransType = info.autoTransType;\r\n\r\n          switch (autoTransType) {\r\n            case 1:\r\n              _this.accountTypeSelector = \"自订\";\r\n              break;\r\n            case 2:\r\n              _this.accountTypeSelector = \"免转钱包\";\r\n              break;\r\n            default:\r\n              _this.accountTypeSelector = \"智充宝\";\r\n              break;\r\n          }\r\n          // for (let i = 0; i < list.length; i++) {\r\n          //   if (list[i].spid != 0) {\r\n          //     _this.wallentListBalance.push(list[i]);\r\n          //   }\r\n          // }\r\n          _this.getWalletList();\r\n        }\r\n      );\r\n    },\r\n\r\n    transOut(v) {\r\n      if (v.spStatus == 2) return;\r\n      this.showtransfer = true;\r\n      this.outid = v.spID;\r\n      this.inid = 0;\r\n    },\r\n    transIn(v) {\r\n      if (v.spStatus == 2) return;\r\n      this.showtransfer = true;\r\n      this.outid = 0;\r\n      this.inid = v.spID;\r\n    },\r\n    transferCancel() {\r\n      this.showtransfer = false;\r\n      this.transferAmount = null;\r\n      this.outid = null;\r\n      this.inid = null;\r\n    },\r\n    //一键回收\r\n    alltransferOutWallet() {\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"alltransferOutWallet\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          if (res.error._error) {\r\n            // errorToast(res.error._error);\r\n          } else if (res.message) {\r\n            _this.getuserinfo();\r\n          }\r\n        }\r\n      );\r\n    },\r\n    //转入转出\r\n    transferWallet() {\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      // _this.balance = _web.balance;\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      if (this.outpoints < this.transferAmount || this.transferAmount < 1) {\r\n        alert(\"账户余额不足\");\r\n        return;\r\n      }\r\n      this.$axios(\r\n        \"TransferWallet\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          fromWalletID: this.outid,\r\n          toWalletID: this.inid,\r\n          amount: this.transferAmount,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          if (res.message) {\r\n            alert(res.message);\r\n            _this.getuserinfo();\r\n          }\r\n        }\r\n      );\r\n    },\r\n    //一鍵轉出\r\n    transferOutOneWallet(v) {\r\n      if (v.spStatus == 2) return;\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"TransferOutOneWallet\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          walletID: v.spID,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          if (res.error._error) {\r\n            alert(res.error._error);\r\n          } else if (res.message) {\r\n            alert(res.message);\r\n            _this.getuserinfo();\r\n          }\r\n        }\r\n      );\r\n    },\r\n    //一鍵轉入\r\n    allTransferInWallet(v) {\r\n      if (v.spStatus == 2) return;\r\n      let _this = this;\r\n      let _web = JSON.parse(this.getCookie(\"webs\"));\r\n      let loginID = _web.loginID;\r\n      let Authorization = _web.Authorization;\r\n      this.$axios(\r\n        \"AllTransferInWallet\",\r\n        {\r\n          siteID: this.siteID,\r\n          loginID: loginID,\r\n          walletID: v.spID,\r\n          token: Authorization\r\n        },\r\n        resp => {\r\n          let res = JSON.parse(resp.data);\r\n          let list = res.data;\r\n          if (res.error._error) {\r\n            alert(res.error._error);\r\n          } else if (res.message) {\r\n            alert(res.message);\r\n            _this.getuserinfo();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  },\r\n  created() {\r\n    // 1. 呼叫 api action\r\n    this.$store.dispatch(\"actionAJAXexample\");\r\n  },\r\n  computed: mapGetters({\r\n    // 6. 等待通知.. 調用 getter function 取得 state\r\n    datalist: \"getDatalist\"\r\n  }),\r\n  watch: {\r\n    outid(nv, ov) {\r\n      if (nv == null) {\r\n        this.outspName = null;\r\n        this.outpoints = null;\r\n      } else if (nv == 0) {\r\n        this.outspName = \"主账户\";\r\n        this.outpoints = this.mainbalance;\r\n      } else {\r\n        let f = this.wallentList.find(e => {\r\n          return e.spID == nv;\r\n        });\r\n        this.outspName = f.spName;\r\n        this.outpoints = f.points;\r\n      }\r\n    },\r\n    inid(nv, ov) {\r\n      if (nv == null) {\r\n        this.inspName = null;\r\n        this.inpoints = null;\r\n      } else if (nv == 0) {\r\n        this.inspName = \"主账户\";\r\n        this.inpoints = this.mainbalance;\r\n      } else {\r\n        let f = this.wallentList.find(function(e) {\r\n          return e.spID == nv;\r\n        });\r\n        this.inspName = f.spName;\r\n        this.inpoints = f.points;\r\n      }\r\n    },\r\n    transferAmount(nv) {\r\n      if (nv > this.outpoints) {\r\n        this.transferAmount = this.outpoints;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style src=\"./UserWalletTransfer.css\" scoped></style>"]}]}