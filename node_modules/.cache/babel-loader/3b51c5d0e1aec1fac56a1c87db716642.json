{"remainingRequest":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\westlottery\\lottery_mobile_vue\\src\\views\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\src\\views\\login\\login.vue","mtime":1565599934741},{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\westlottery\\lottery_mobile_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"D:\\\\work\\\\westlottery\\\\lottery_mobile_vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\nimport { _getstatus } from '@/assets/src/forgame.js';\nexport default {\n  data: function data() {\n    return {\n      siteID: this.$global.siteID,\n      input: {\n        loginID: \"\",\n        loginPw: \"\",\n        loginCode: \"\"\n      },\n      vcode: \"\"\n    };\n  },\n  methods: {\n    VerifySessionStatus: function VerifySessionStatus(token) {\n      var _this = this;\n\n      this.$axios(\"VerifySessionStatus\", {\n        token: token\n      }, function (resp) {\n        var json = JSON.parse(resp.data);\n        if (json.message == \"验证Session通过!\" || json.message == \"驗證Session通過!\") _this.$router.push({\n          path: \"index\"\n        });else alert(_loginjson.error._error);\n      });\n    },\n    login: function login() {\n      var _this2 = this;\n\n      var _this$input = this.input,\n          loginID = _this$input.loginID,\n          loginPw = _this$input.loginPw,\n          loginCode = _this$input.loginCode;\n\n      if (loginID == \"\" || loginPw == \"\") {\n        alert(\"请填入帐号或密码\");\n      } else if (loginCode == \"\") alert(\"请输入验证码!\");else if (this.vcode != loginCode) {\n        alert(\"验证码输入错误!\");\n        this.createCode();\n      } else {\n        //登入\n        this.$axios(\"login\", {\n          siteID: this.siteID,\n          loginID: loginID,\n          loginPw: loginPw\n        }, function (resp) {\n          var loginjson = JSON.parse(resp.data);\n          var _loginjson$info = loginjson.info,\n              token = _loginjson$info.token,\n              isMember = _loginjson$info.isMember,\n              isTrial = _loginjson$info.isTrial,\n              memberID = _loginjson$info.memberID;\n\n          if (loginjson.message == \"登入成功\") {\n            var _web = JSON.parse(_this2.getCookie(\"webs\"));\n\n            _web.Authorization = token;\n            _web.loginID = loginID;\n            _web.isMember = isMember;\n            _web.isTrial = isTrial;\n            _web.memberID = memberID;\n\n            _this2.setCookie(\"webs\", _JSON$stringify(_web));\n\n            _this2.$socket.emit('join', {\n              siteID: _this2.$siteID,\n              memberID: memberID,\n              token: token\n            }); //更新vuex 状态\n\n\n            _this2.$store.dispatch(\"updateloginID\", loginID);\n\n            _this2.$store.dispatch(\"setisLogin\", true); //验证session\n\n\n            _this2.VerifySessionStatus(token);\n\n            _getstatus(_this2);\n          } else {\n            alert(loginjson.error._error);\n          }\n        });\n      }\n    },\n    createCode: function createCode() {\n      var code = \"\";\n      var codeLength = 4; //验证码的长度\n\n      var checkCode = document.getElementById(\"code\");\n      var random = new Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"); //随机数\n\n      for (var i = 0; i < codeLength; i++) {\n        //循环操作\n        var index = Math.floor(Math.random() * 36); //取得随机数的索引（0~35）\n\n        code += random[index]; //根据索引取得随机数加到code上\n      }\n\n      this.vcode = code; //把code值赋给验证码\n    }\n  },\n  watch: {\n    'input.loginCode': function inputLoginCode() {\n      this.input.loginCode = this.input.loginCode.toUpperCase();\n    }\n  },\n  mounted: function mounted() {\n    this.createCode();\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<template src='./login.html'>\r\n    \r\n</template>\r\n\r\n<script>\r\nimport { _getstatus } from '@/assets/src/forgame.js'\r\nexport default {\r\n    data() {\r\n        return {\r\n            siteID: this.$global.siteID,\r\n            input:{\r\n                loginID: \"\",\r\n                loginPw: \"\",\r\n                loginCode: \"\"\r\n            },\r\n            vcode: \"\",            \r\n        };\r\n    },\r\n    methods: {\r\n        VerifySessionStatus: function(token) {           \r\n            this.$axios(\r\n                \"VerifySessionStatus\", { token },\r\n                (resp)=> {\r\n                    let json = JSON.parse(resp.data);\r\n                    if (\r\n                        json.message == \"验证Session通过!\" ||\r\n                        json.message == \"驗證Session通過!\"\r\n                    )\r\n                        this.$router.push({ path: \"index\" });\r\n                    else alert(_loginjson.error._error);\r\n                }\r\n            );\r\n        },\r\n\r\n        login: function() {\r\n            let {loginID,loginPw,loginCode} = this.input\r\n\r\n            if (loginID == \"\" || loginPw == \"\") {\r\n                alert(\"请填入帐号或密码\");\r\n            } else if (loginCode == \"\")\r\n                alert(\"请输入验证码!\");\r\n            else if (this.vcode != loginCode) {\r\n                alert(\"验证码输入错误!\");\r\n                this.createCode()\r\n            } else {  \r\n                //登入\r\n                this.$axios(\r\n                    \"login\", {\r\n                        siteID: this.siteID,\r\n                        loginID: loginID,\r\n                        loginPw: loginPw\r\n                    },\r\n                    (resp)=> {\r\n                        let loginjson = JSON.parse(resp.data);\r\n                        let {token,isMember,isTrial,memberID} = loginjson.info\r\n\r\n                        if (loginjson.message == \"登入成功\") {\r\n                            let _web = JSON.parse(this.getCookie(\"webs\"));\r\n                            _web.Authorization = token;\r\n                            _web.loginID = loginID;\r\n                            _web.isMember = isMember;\r\n                            _web.isTrial = isTrial;\r\n                            _web.memberID = memberID\r\n                            this.setCookie(\"webs\", JSON.stringify(_web));\r\n                            this.$socket.emit('join', { siteID: this.$siteID ,memberID,token})\r\n\r\n                            //更新vuex 状态\r\n                            this.$store.dispatch(\"updateloginID\", loginID)\r\n                            this.$store.dispatch(\"setisLogin\", true)\r\n                            //验证session\r\n                            this.VerifySessionStatus(token);\r\n                            _getstatus(this);\r\n\r\n                        } else {\r\n                            alert(loginjson.error._error)\r\n\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        },\r\n        createCode: function() {\r\n            let code = \"\";\r\n            var codeLength = 4; //验证码的长度\r\n            var checkCode = document.getElementById(\"code\");\r\n            var random = new Array(\r\n                0,\r\n                1,\r\n                2,\r\n                3,\r\n                4,\r\n                5,\r\n                6,\r\n                7,\r\n                8,\r\n                9,\r\n                \"A\",\r\n                \"B\",\r\n                \"C\",\r\n                \"D\",\r\n                \"E\",\r\n                \"F\",\r\n                \"G\",\r\n                \"H\",\r\n                \"I\",\r\n                \"J\",\r\n                \"K\",\r\n                \"L\",\r\n                \"M\",\r\n                \"N\",\r\n                \"O\",\r\n                \"P\",\r\n                \"Q\",\r\n                \"R\",\r\n                \"S\",\r\n                \"T\",\r\n                \"U\",\r\n                \"V\",\r\n                \"W\",\r\n                \"X\",\r\n                \"Y\",\r\n                \"Z\"\r\n            ); //随机数\r\n            for (var i = 0; i < codeLength; i++) {\r\n                //循环操作\r\n                var index = Math.floor(Math.random() * 36); //取得随机数的索引（0~35）\r\n                code += random[index]; //根据索引取得随机数加到code上\r\n            }\r\n            this.vcode = code; //把code值赋给验证码\r\n        }\r\n    },\r\n    watch: {\r\n        'input.loginCode': function() {\r\n            this.input.loginCode = this.input.loginCode.toUpperCase();\r\n        }\r\n    },\r\n    mounted() {\r\n        this.createCode();\r\n    }\r\n};\r\n</script>\r\n\r\n<style src='./login.css'>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/login"}]}